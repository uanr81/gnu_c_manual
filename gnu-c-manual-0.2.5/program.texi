
@c This is part of The GNU C Reference Manual
@c Copyright (C) 2007-2009 Free Software Foundation, Inc.
@c See the file gnu-c-manual.texi for copying conditions.

@c ----------------------------------------------------------------------------

@node Program Structure and Scope
@chapter Структура Программы и Области

Теперь, когда пказаны все из основных элементов программ C, пришло время
взглянуть на общую картину.

@menu
* Program Structure::
* Scope::
@end menu

@node Program Structure
@section Структура Программы
@cindex program structure
@cindex structure, program

Программа C может существовать полностью в пределах одного исходного файла,
но чаще всего, любая нетривиальная программа будет состоять из нескольких
пользовательских заголовочных и исходных файлов, а также включать
в себя связи с файлами из существующих библиотек.

По соглашению, заголовочные файлы (с расширением ``.h'') содержат объявления
переменных и функций, а исходные файлы (с расширением ``.c'') содержат
соответствующие определения.  Исходные файлы могут также хранить
объявление, если такие объявления объектов не предназначены для использования
из других файлов.  Тем не менее, заголовочные файлы почти наверняка не будут
содержать каких-либо определений.

Например, при написании функции, которая вычисляет квадратные корни и если
для неё требуется реализовать возможность доступа другим функциям,
определённых не в том же файле, где определена вызываемая функцияи, тогда
нужно поместить объявление функции в заголовочный файл
(файв с расширением ``.h''):

@example
@group
/* @r{sqrt.h} */

double
computeSqrt (double x);
@end group
@end example

@noindent
Этот заголовочный файл может быть включен другими исходными файлами, которым
требуется использовать эту функцию, и для этого не нужно знать, как это было
реализовано.

Реализация функции может затем перейти в соответствующий исходный файл
(с расширением файла ``.c''):  (ВопросPrpgram57)

@example
@group
/* @r{sqrt.c} */
#include "sqrt.h"

double
computeSqrt (double x)
@{
  double result;
  @dots{}
  return result;
@}
@end group
@end example



@node Scope
@section Связка
@cindex scope

@c на самом деле scope является чем-то еще; это более правильно называть
@c ``статическое связывание'' (в отличие от внешних связей).

Связка относится к тому, что части программы могут ``видеть'' объявленный
объект.  Объявленный объект может быть виден только в пределах конкретной
функции, в пределах определенного файла или может быть виден всему набору
файлов, путем включения заголовочных файлов и использовании объявления
@code{extern}.

Если явно не указано иное, объявления, сделанные на верхнем уровне файла
(т.е. не в нутри функции) видимы для всего файла, в том числе внутри функций,
но не видны за пределами файла.

Объявления, сделанные внутри функции видны только в пределах этой функции.

Вновь созданные объявления, затеняют предыдущие объявления, например:

@example
@group
int x = 5;
int y = x + 10;
@end group
@end example

@noindent
будет работать, но:

@example
@group
int x = y + 10;
int y = 5;
@end group
@end example

@noindent
не будет.

@xref{Storage Class Specifiers}, для получения дополнительной информации об
изменении связки объявленных объектов.  Также смотреть
@ref{Static Functions}.

