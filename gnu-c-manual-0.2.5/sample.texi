
@c This is part of The GNU C Reference Manual
@c Copyright (C) 2007-2009 Free Software Foundation, Inc.
@c See the file gnu-c-manual.texi for copying conditions.

@c -------------------------------------------------------------------------

@node A Sample Program
@chapter Примеры Программ
@cindex sample program
@cindex hello program

Чтобы завершить наше описание C, вот полная программа, написанная на C,
состоящая как из исходного файла C, так и из файла заголовка.  Эта программа
является расширенной версией типичной программы ``привет мир'' и служит
примером того, как форматировать и структурировать код C для использования в
программах для FSF Project GNU.  (Вы всегда можете загрузить самую последнюю
версию этой программы, включая образцы make-файлов и другие примеры создания
программного обеспечения GNU, с @code{http://www.gnu.org/software/hello}.)

Эта программа использует возможности препроцессора; для описания макросов
препроцессора смотреть @cite{The C Preprocessor}, доступна как часть
документации GCC.

@menu
* hello.c::
* system.h::
@end menu

@c ----------------------------------------------------------------------------

@node hello.c
@section @code{hello.c}
@cindex hello.c

@smallexample
/* hello.c -- распечатать приветственное сообщение и выйти.

   Copyright (C) 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
   2005, 2006, 2007 Free Software Foundation, Inc.

   Это бесплатное программное обеспечение; вы можете распространять и/или
   изменять его в соответствии с условиями Стандартной общественной лицензии
   GNU, опубликованной Free Software Foundation; либо версии 3, либо (по
   вашему выбору) любой более поздней версии.

   Эта программа распространяется в надежде, что она будет полезной, но
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ; даже без подразумеваемой гарантии
   КОММЕРЧЕСКОЙ ЦЕННОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. Подробнее
   смотреть Стандартную общественную лицензию GNU.

   Вы должны были получить копию Стандартной общественной лицензии GNU вместе
   с этой программой; если нет, напишите в Free Software Foundation,
   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */

#include <config.h>
#include "system.h"

/* Строка, содержащая имя, с которым вызывается программа.  */
const char *program_name;

static const struct option longopts[] =
@{
  @{ "greeting", required_argument, NULL, 'g' @},
  @{ "help", no_argument, NULL, 'h' @},
  @{ "next-generation", no_argument, NULL, 'n' @},
  @{ "traditional", no_argument, NULL, 't' @},
  @{ "version", no_argument, NULL, 'v' @},
  @{ NULL, 0, NULL, 0 @}
@};

static void print_help (void);
static void print_version (void);

int
main (int argc, char *argv[])
@{
  int optc;
  int t = 0, n = 0, lose = 0;
  const char *greeting = NULL;

  program_name = argv[0];

  /* Установить локаль через LC_ALL.  */
  setlocale (LC_ALL, "");

#if ENABLE_NLS
  /* Установить домен текстового сообщения.  */
  bindtextdomain (PACKAGE, LOCALEDIR);
  textdomain (PACKAGE);
#endif

  /* Даже у вывода есть свои тонкости.  Устройство /dev/full на GNU/Linux
  можно использовать для проверки правильности проверки записи.  Например,
  hello >/dev/full должно завершиться неудачно.  При выходе, если какая-либо
  запись не удалась, измените статус возврата.  Это реализовано в модуле
  Gnulib "closeout"..  */
  atexit (close_stdout);

  while ((optc = getopt_long (argc, argv, "g:hntv", longopts, NULL)) != -1)
    switch (optc)
      @{
      /* Одна из целей здесь - немедленный выход после --help и --version в
      соответствии со стандартами кодирования GNU.  */
      case 'v':
        print_version ();
        exit (EXIT_SUCCESS);
        break;
      case 'g':
        greeting = optarg;
        break;
      case 'h':
        print_help ();
        exit (EXIT_SUCCESS);
        break;
      case 'n':
        n = 1;
        break;
      case 't':
        t = 1;
        break;
      default:
        lose = 1;
        break;
      @}

  if (lose || optind < argc)
    @{
      /* Распечатать сообщение об ошибке и выйти.  */
      if (optind < argc)
        fprintf (stderr, _("%s: дополнительный операнд: %s\n"),
		 program_name, argv[optind]);
      fprintf (stderr, _("Попробуйте `%s --help' для доп. информации.\n"),
               program_name);
      exit (EXIT_FAILURE);
    @}

  /* Распечатать сообщение приветствия и выйти. */
  if (t)
    printf (_("привет, мир\n"));

  else if (n)
    /* ПЕРЕВОДЧИКИ: используйте символы рисования прямоугольников или другие
    причудливые вещи, если ваша кодировка (например, UTF-8) это позволяет.
    В этом случае добавьте следующее примечание:

       [Примечание.  Для наилучшего просмотра используйте локаль UTF-8.]
    */
	printf (_("\
+---------------+\n\
| Привет, мир!  |\n\
+---------------+\n\
"));

  else
    @{
      if (!greeting)
        greeting = _("Привет, мир!");
      puts (greeting);
    @}
  
  exit (EXIT_SUCCESS);
@}



/* Распечатать справочную информацию.  Это длинное сообщение разделено на
несколько частей, чтобы переводчики могли выровнять разные блоки и
идентифицировать различные части.  */

static void
print_help (void)
@{
  /* ПЕРЕВОДЧИКИ: --help output 1 (synopsis) не-заворачивать */
        printf (_("\
Использовать: %s [OPTION]...\n"), program_name);

  /* ПЕРЕВОДЧИКИ: --help output 2 (краткое описание)
     не-оборачивать */
  fputs (_("\
Распечатайте дружелюбное, настраиваемое приветствие.\n"), stdout);

  puts ("");
  /* ПЕРЕВОДЧИКИ: --help вывод 3: опции 1/2
     не-оборачивать */
  fputs (_("\
  -h, --help          отобразить эту справку и выйти\n\
  -v, --version       отобразить информацию о версии и выйти\n"), stdout);

  puts ("");
  /* TRANSLATORS: --help output 4: options 2/2
     no-wrap */
  fputs (_("\
  -t, --traditional       use traditional greeting format\n\
  -n, --next-generation   use next-generation greeting format\n\
  -g, --greeting=TEXT     TEXT текст сообщения приветствия\n"), stdout);

  printf ("\n");
  /* ПЕРЕВОДЧИКИ: --help вывод 5 (завершить)
     ПЕРЕВОДЧИКИ: заполнитель указывает адрес сообщения об ошибке для
     этого приложения.  Пожалуйста, добавьте _another line_ с адресом для
     ошибок перевода.
     не-оборачивать */
  printf (_("\
Report bugs to <%s>.\n"), PACKAGE_BUGREPORT);
@}



/* Версия для печати и информация об авторских правах.  */

static void
print_version (void)
@{
  printf ("привет (GNU %s) %s\n", PACKAGE, VERSION);
  /* xgettext: no-wrap */
  puts ("");
  
  /* Важно отделить год от остальной части сообщения, как это сделано здесь,
  чтобы избежать необходимости повторно переводить сообщение, когда
  наступает новый год.  */
  printf (_("\
Copyright (C) %s Free Software Foundation, Inc.\n\
License GPLv3+: GNU GPL version 3 or later\
<http://gnu.org/licenses/gpl.html>\n\
Это бесплатное программное обеспечение: можно изменять и\
распространять его.\n\
НИКАКИХ ГАРАНТИЙ в пределах, разрешенных законом..\n"),
              "2007");
@}
@end smallexample

@c --------------------------------------------------------------------------

@node system.h
@section @code{system.h}
@cindex system.h

@smallexample
/* system.h: системно-зависимые объявления; включите это в первую очередь.
   Copyright (C) 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
   2005, 2006, 2007 Free Software Foundation, Inc.

   Это бесплатное программное обеспечение; вы можете распространять и/или
   изменять его в соответствии с условиями Стандартной общественной лицензии
   GNU, опубликованной Free Software Foundation; либо версии 3, либо (по
   вашему выбору) любой более поздней версии.

   Эта программа распространяется в надежде, что она будет полезной, но
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ; даже без подразумеваемой гарантии
   КОММЕРЧЕСКОЙ ЦЕННОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. Подробнее
   смотреть Стандартную общественную лицензию GNU.

   Вы должны были получить копию Стандартной общественной лицензии GNU вместе
   с этой программой; если нет, напишите в Free Software Foundation,
   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
   Copyright (C) 1996, 2005, 2006, 2007 Free Software Foundation, Inc.

#ifndef HELLO_SYSTEM_H
#define HELLO_SYSTEM_H

/* Предположим, что заголовки ANSI C89 доступны.  */
#include <locale.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* Используйте заголовки POSIX.  Если они недоступны, мы используем замену,
предоставленную gnulib.  */
#include <getopt.h>
#include <unistd.h>

/* Интернационализация.  */
#include "gettext.h"
#define _(str) gettext (str)
#define N_(str) gettext_noop (str)

/* Проверить на наличие ошибок при записи.  */
#include "closeout.h"

#endif /* HELLO_SYSTEM_H */
@end smallexample
